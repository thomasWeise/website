<project name="website" basedir="." default="build" xmlns:if="ant:if" xmlns:unless="ant:unless">
	<description>
	Build the builder.websiteDir.
	</description>

	<property name="builder.websiteDir" location="website" />
	<property name="builder.toolsDir" location="tools" />
	<property name="builder.websiteBuilderDir" location="${builder.toolsDir}/websiteBuilder" />
	<property name="builder.websiteBuilderTargetDir" location="${builder.websiteBuilderDir}/target" />
	<property name="builder.websiteSourceDir" location="${builder.websiteDir}/source" />
	<property name="builder.websiteResourcesDir" location="${builder.websiteSourceDir}/resources" />
	<property name="builder.websiteIncludesDir" location="${builder.websiteSourceDir}/include" />
	<property name="builder.websiteDestDir" location="${builder.websiteDir}/build" />
	<property name="builder.websiteTempDir" location="${builder.websiteDir}/temp" />

	<property file="${builder.websiteDir}/website.properties" />

	<macrodef name="clean" description="Clean the intermediate files.">
		<sequential>
			<echo message="Begin cleaning up old files and folders." />
			<delete dir="${builder.websiteBuilderTargetDir}" />
			<delete dir="${builder.websiteBuilderDir}/bin" />
			<delete dir="${builder.websiteTempDir}" />
			<echo message="Finished cleaning up old files and folders." />
		</sequential>
	</macrodef>

	<macrodef name="websiteBuilder-build" description="Build the website builder.">
		<sequential>
			<echo message="Begin building the websiteBuilder project." />
			<subant target="build">
				<fileset dir="${builder.websiteBuilderDir}" includes="build.xml" />
			</subant>
			<echo message="Finished building the websiteBuilder project." />
		</sequential>
	</macrodef>

	<macrodef name="websiteBuilder-exec" description="Execute the builder.websiteDir builder.">
		<attribute name="fromDir" />
		<attribute name="toDir" />
		<sequential>
			<echo message="Executing the websiteBuilder from '@{fromDir}' to '@{toDir}'." />
			<mkdir dir="@{toDir}" />
			<java jar="${builder.websiteBuilderTargetDir}/websiteBuilder-0.8.5-SNAPSHOT-full.jar" failonerror="true" fork="true" dir="@{fromDir}">
				<arg value="source=@{fromDir}" />
				<arg value="dest=@{toDir}" />
			</java>
			<echo message="Finished executing the websiteBuilder from '@{fromDir}' to '@{toDir}'." />
		</sequential>
	</macrodef>


	<macrodef name="assemble" description="Assemble HTML and CSS.">
		<attribute name="fromDir" />
		<attribute name="toDir" />
		<sequential>
			<echo message="Begin assembling HTML and CSS from '@{fromDir}' to '@{toDir}'." />
			<mkdir dir="@{toDir}" />

			<concat destfile="@{toDir}/css/screen.css" force="no">
				<!-- normalize.css should come first -->
				<filelist dir="@{fromDir}/css/screen/base/" files="normalize.css,baseLayout.css" />
				<fileset dir="@{fromDir}/css/screen/extension" includes="*.css" />
			</concat>

			<concat destfile="@{toDir}/css/print.css" force="no">
				<!-- normalize.css should come first -->
				<filelist dir="@{fromDir}/css/print/base/" files="normalize.css,baseLayout.css" />
				<fileset dir="@{fromDir}/css/print/extension" includes="*.css" />
			</concat>

			<loadfile property="menu" srcFile="${builder.websiteIncludesDir}/menu.html" />

			<copy todir="@{toDir}">
				<fileset dir="@{fromDir}/html">
					<include name="**/*.html" />
				</fileset>
				<filterchain>
					<concatfilter prepend="${builder.websiteIncludesDir}/header.html" />
					<concatfilter append="${builder.websiteIncludesDir}/footer.html" />
					<expandproperties />
					<expandproperties />
				</filterchain>
			</copy>

			<echo message="Finished assembling HTML and CSS from '@{fromDir}' to '@{toDir}'." />
		</sequential>
	</macrodef>


	<macrodef name="removeSpacesAround" description="Remove all white space around a given string.">
		<attribute name="fileSet" />
		<attribute name="string" />
		<attribute name="replace" />
		<sequential>
			<replaceregexp match="\s*\n*\s*@{string}\s*\s*\n*" replace="@{string}" flags="gi" byline="false" unless:set="replace">
				<fileset refid="@{fileSet}" />
			</replaceregexp>
			<replaceregexp match="\s*\n*\s*@{string}\s*\s*\n*" replace="@{replace}" flags="gi" byline="false" if:set="replace">
				<fileset refid="@{fileSet}" />
			</replaceregexp>
		</sequential>
	</macrodef>


	<macrodef name="cleanHTMLBlockTag" description="Clean a block tag.">
		<attribute name="tag" />
		<attribute name="fileSet" />
		<sequential>

			<replaceregexp match="\s*\r*\n*\r*\s*&lt;\s*\r*\n*\r*\s*@{tag}\s*\r*\n*\r*\s*>\s*\r*\n*\r*\s*" flags="gi" replace="&lt;@{tag}>">
				<fileset refid="@{fileSet}" />
			</replaceregexp>

			<replaceregexp match="\s*\r*\n*\r*\s*&lt;\s*\r*\n*\r*\s*@{tag}\s*\r*\n*\r*\s*/\s*\r*\n*\r*\s*>\s*\r*\n*\r*\s*" flags="gi" replace="&lt;@{tag}/>">
				<fileset refid="@{fileSet}" />
			</replaceregexp>

			<replaceregexp match="\s*\r*\n*\r*\s*&lt;/\s*\r*\n*\r*\s*@{tag}\s*\r*\n*\r*\s*>\s*\r*\n*\r*\s*" flags="gi" replace="&lt;/@{tag}>">
				<fileset refid="@{fileSet}" />
			</replaceregexp>

			<replaceregexp match="\s*\r*\n*\r*\s*&lt;\s*\r*\n*\r*\s*@{tag}\s+([a-zA-Z].*?[&quot;'])\s*\r*\n*\r*\s*>\s*\r*\n*\r*\s*" flags="gi" replace="&lt;@{tag} \1>">
				<fileset refid="@{fileSet}" />
			</replaceregexp>

			<replaceregexp match="\s*\r*\n*\r*\s*&lt;\s*\r*\n*\r*\s*@{tag}\s+([a-zA-Z].*?[&quot;'])\s*\r*\n*\r*\s*/\s*\r*\n*\r*\s*>\s*\r*\n*\r*\s*" flags="gi" replace="&lt;@{tag} \1/>">
				<fileset refid="@{fileSet}" />
			</replaceregexp>

		</sequential>
	</macrodef>


	<macrodef name="minify" description="Minify html and css.">
		<attribute name="fromDir" />
		<attribute name="toDir" />
		<sequential>
			<echo message="Minifying HTML and CSS from '@{fromDir}' to '@{toDir}'." />
			<mkdir dir="@{toDir}" />

			<!-- Make sure that the CSS and HTML files are moved to the destination folder. -->
			<copy todir="@{toDir}" unless:true="@{merge}">
				<fileset dir="@{fromDir}" />
			</copy>

			<!-- make the css smaller -->

			<fileset id="@{toDir}.css.fileSet" dir="@{toDir}/css/" includes="**/*.css" />


			<replaceregexp match="\s+" replace=" " flags="gi" byline="true">
				<fileset refid="@{toDir}.css.fileSet" />
			</replaceregexp>
			<replaceregexp match="\s*\r*\n+\r*\s*" replace="" flags="gi" byline="false">
				<fileset refid="@{toDir}.css.fileSet" />
			</replaceregexp>

			<replaceregexp match="/\*.*?\*/" replace="" flags="g" byline="false">
				<fileset refid="@{toDir}.css.fileSet" />
			</replaceregexp>

			<removeSpacesAround string="\{" replace="{" fileSet="@{toDir}.css.fileSet" />
			<removeSpacesAround string="\}" replace="}" fileSet="@{toDir}.css.fileSet" />
			<removeSpacesAround string="\," replace="," fileSet="@{toDir}.css.fileSet" />
			<removeSpacesAround string="\;" replace=";" fileSet="@{toDir}.css.fileSet" />
			<removeSpacesAround string="\." replace="." fileSet="@{toDir}.css.fileSet" />
			<removeSpacesAround string="\:" replace=":" fileSet="@{toDir}.css.fileSet" />
			<removeSpacesAround string="\&quot;" replace="&quot;" fileSet="@{toDir}.css.fileSet" />
			<removeSpacesAround string="\'" replace="'" fileSet="@{toDir}.css.fileSet" />

			<!-- make the jsps smaller based on an extremely crude heuristic -->

			<fileset id="@{toDir}.html.fileSet" dir="@{toDir}/" includes="**/*.html" />

			<replaceregexp match="\s+" replace=" " flags="gi" byline="true">
				<fileset refid="@{toDir}.html.fileSet" />
			</replaceregexp>
			<replaceregexp match="\s*\r*\n+\r*\s*" replace=" " flags="gi" byline="false">
				<fileset refid="@{toDir}.html.fileSet" />
			</replaceregexp>

			<cleanHTMLBlockTag tag="meta" fileSet="@{toDir}.html.fileSet" />
			<cleanHTMLBlockTag tag="noscript" fileSet="@{toDir}.html.fileSet" />
			<cleanHTMLBlockTag tag="html" fileSet="@{toDir}.html.fileSet" />
			<cleanHTMLBlockTag tag="head" fileSet="@{toDir}.html.fileSet" />
			<cleanHTMLBlockTag tag="title" fileSet="@{toDir}.html.fileSet" />
			<cleanHTMLBlockTag tag="link" fileSet="@{toDir}.html.fileSet" />
			<cleanHTMLBlockTag tag="script" fileSet="@{toDir}.html.fileSet" />
      <cleanHTMLBlockTag tag="base" fileSet="@{toDir}.html.fileSet" />
			<cleanHTMLBlockTag tag="body" fileSet="@{toDir}.html.fileSet" />
			<cleanHTMLBlockTag tag="h1" fileSet="@{toDir}.html.fileSet" />
			<cleanHTMLBlockTag tag="h2" fileSet="@{toDir}.html.fileSet" />
			<cleanHTMLBlockTag tag="h3" fileSet="@{toDir}.html.fileSet" />
			<cleanHTMLBlockTag tag="h4" fileSet="@{toDir}.html.fileSet" />
			<cleanHTMLBlockTag tag="h5" fileSet="@{toDir}.html.fileSet" />
			<cleanHTMLBlockTag tag="h6" fileSet="@{toDir}.html.fileSet" />
			<cleanHTMLBlockTag tag="p" fileSet="@{toDir}.html.fileSet" />
			<cleanHTMLBlockTag tag="ol" fileSet="@{toDir}.html.fileSet" />
			<cleanHTMLBlockTag tag="ul" fileSet="@{toDir}.html.fileSet" />
			<cleanHTMLBlockTag tag="li" fileSet="@{toDir}.html.fileSet" />
			<cleanHTMLBlockTag tag="dl" fileSet="@{toDir}.html.fileSet" />
			<cleanHTMLBlockTag tag="dd" fileSet="@{toDir}.html.fileSet" />
			<cleanHTMLBlockTag tag="dt" fileSet="@{toDir}.html.fileSet" />
			<cleanHTMLBlockTag tag="section" fileSet="@{toDir}.html.fileSet" />
			<cleanHTMLBlockTag tag="header" fileSet="@{toDir}.html.fileSet" />
			<cleanHTMLBlockTag tag="aside" fileSet="@{toDir}.html.fileSet" />
			<cleanHTMLBlockTag tag="table" fileSet="@{toDir}.html.fileSet" />
			<cleanHTMLBlockTag tag="tr" fileSet="@{toDir}.html.fileSet" />
			<cleanHTMLBlockTag tag="th" fileSet="@{toDir}.html.fileSet" />
			<cleanHTMLBlockTag tag="td" fileSet="@{toDir}.html.fileSet" />
			<cleanHTMLBlockTag tag="form" fileSet="@{toDir}.html.fileSet" />
			<cleanHTMLBlockTag tag="option" fileSet="@{toDir}.html.fileSet" />
			<cleanHTMLBlockTag tag="br" fileSet="@{toDir}.html.fileSet" />
			<cleanHTMLBlockTag tag="hr" fileSet="@{toDir}.html.fileSet" />
			<cleanHTMLBlockTag tag="select" fileSet="@{toDir}.html.fileSet" />
      <cleanHTMLBlockTag tag="pre" fileSet="@{toDir}.html.fileSet" />

			<replaceregexp match="\s*\r*\n*\r*\s*&lt;!DOCTYPE\s*\r*\n*\r*" replace="&lt;!DOCTYPE " flags="gi" byline="false">
				<fileset refid="@{toDir}.html.fileSet" />
			</replaceregexp>
			<replaceregexp match="\s*\r*\n*\r*\s*&lt;html" replace="&lt;html" flags="gi" byline="false">
				<fileset refid="@{toDir}.html.fileSet" />
			</replaceregexp>
			<replaceregexp match="html>\s*\r*\n*\r*\s*" replace="html>" flags="gi" byline="false">
				<fileset refid="@{toDir}.html.fileSet" />
			</replaceregexp>

			<echo message="Finished minifying HTML and CSS from '@{fromDir}' to '@{toDir}'." />
		</sequential>
	</macrodef>

	<!-- taken from http://stackoverflow.com/questions/1123151 -->
	<macrodef name="commit" description="Copy files only if different; remove files that do not exist in dir. This works similiar to robocopy /MIR.">
		<attribute name="fromDir" />
		<attribute name="toDir" />
		<attribute name="resourcesDir" />
		<sequential>
			<echo message="Committing website from '@{fromDir}' to '@{toDir}'." />
			<copy overwrite="true" toDir="@{toDir}">
				<fileset dir="@{fromDir}">
					<different targetdir="@{toDir}" />
				</fileset>
			</copy>
			<echo message="Committing resources from '@{resourcesDir}' to '@{toDir}'." />
			<copy overwrite="true" toDir="@{toDir}">
				<fileset dir="@{resourcesDir}">
					<different targetdir="@{toDir}" />
				</fileset>
			</copy>

			<echo message="Deleting unused files in '@{toDir}'." />
			<delete includeemptydirs="true">
				<fileset dir="@{toDir}">
					<and>
						<present targetdir="@{fromDir}" present="srconly" />
						<present targetdir="@{resourcesDir}" present="srconly" />
					</and>
					<exclude name="/css" />
				</fileset>
			</delete>
			<echo message="Finished committing website from '@{fromDir}' to '@{toDir}'." />
		</sequential>
	</macrodef>


	<target name="build">
		<sequential>
			<clean />
			<websiteBuilder-build />
			<assemble fromDir="${builder.websiteSourceDir}" toDir="${builder.websiteTempDir}/stage_1" />
			<minify fromDir="${builder.websiteTempDir}/stage_1" toDir="${builder.websiteTempDir}/stage_2" />
			<websiteBuilder-exec fromDir="${builder.websiteTempDir}/stage_2" toDir="${builder.websiteTempDir}/stage_3" />
			<minify fromDir="${builder.websiteTempDir}/stage_3" toDir="${builder.websiteTempDir}/stage_4" />
			<commit fromDir="${builder.websiteTempDir}/stage_4" toDir="${builder.websiteDestDir}" resourcesDir="${builder.websiteResourcesDir}" />
			<clean />
		</sequential>
	</target>
</project>
